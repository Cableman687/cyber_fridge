<div class="flex-container">


</div>
<section class="">
    <!--Number of fridge items {{ingredients.length}} -->
  {{#if ingredients}}
    <form id="update-ingredients">
        <!--hidden fields that get updated when a user updates/deletes a fridge item -->
        <!--only want to update the fields that actually changed -->
        <input type="hidden" id="delete-fields"></input>
        <input type="hidden" id="update-fields"></input>
        <!--May want to remove these from helper functions and add them to the Route -->
        <input type="hidden" id="labels" value ="{{{labels ingredients}}}"></input>
        <input type="hidden" id="quantities" value ="{{{quantities ingredients}}}"></input>
        <input type="hidden" id="categories" value ="{{{categories ingredients}}}"></input>
        <input type="hidden" id="category_count" value ="{{{category_count ingredients}}}"></input>
        <table>
        <tr><th></th><th>Category</th><th>Product Name</th><th>Quantity</th><th>Delete</th></th></tr>
         {{#each ingredients as |ingredient| }}
         {{>fridge-details}}         
        {{/each}}
    </table>
    <button type="submit">Update</button>
    </form>

    

    {{else}}
        Empty fridge!
        
    {{/if}}
</section>

<figure class="chart">
  <!--PRODUCT chart-->
  <canvas id="productNameChart"></canvas>   
</figure>

<figure class="chart">
  <!--CATEGORY Chart -->
  <canvas id="categoryChart"></canvas>
</figure>

<div class="form-group text-center">
  <button class="btn btn-primary" type="button" id="selections-button">Return to Selections</button>
</div> 

<!--dialog for validation -->
<div id="dialog" title="Validation" class="hidden">
    <p id="dialog-error-msg">Please enter your content.</p>
</div>
<script src="/js/fridge.js"></script> 
<!--
<script type="module" src="/js/chart-fridge.js"></script> 
-->

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!--script for chart -->
<script>
    //PRODUCT Chart
      const ctx = document.getElementById('productNameChart');
      
      const labels = document.getElementById("labels").value.split(",");
      const quantities = document.getElementById("quantities").value.split(",");
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: '# of Ingredients',
              data: quantities,
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
    
//CATEGORY Chart
const ctxCategory = document.getElementById('categoryChart');
  
const categories = document.getElementById("categories").value.split(",");
const categoryCount = document.getElementById("category_count").value.split(",");
  new Chart(ctxCategory, {
    type: 'bar',
    data: {
      //labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      labels: categories,
      datasets: [{
        label: 'by Category',
        data: categoryCount,
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
</script>

<script src="/js/transfers/transferToSelections.js"></script>