<div class="container" >

  <div class="d-flex flex-column">
      
      <section class="col">
        <p class="main-title">My Fridge</p>
          <!--Number of fridge items {{ingredients.length}} -->
        {{#if user.ingredients}}
          <form id="update-ingredients">
              <!--hidden fields that get updated when a user updates/deletes a fridge item -->
              <!--only want to update the fields that actually changed -->
              <input type="hidden" id="delete-fields"></input>
              <input type="hidden" id="update-fields"></input>
              <!--May want to remove these from helper functions and add them to the Route -->
              <input type="hidden" id="labels" value ="{{{labels user.ingredients}}}"></input>
              <input type="hidden" id="quantities" value ="{{{quantities user.ingredients}}}"></input>
              <input type="hidden" id="categories" value ="{{{categories user.ingredients}}}"></input>
              <input type="hidden" id="category_count" value ="{{{category_count user.ingredients}}}"></input>
               <input type="hidden" id="category_colours" value ="{{{category_colours user.ingredients}}}"></input>
              <table class="table">
                <thead class="thead-dark">
                  <tr><th></th><th></th><th scope="col">Category</th><th>Product Name</th><th>Quantity</th><th>Delete</th></th></tr>
                </thead>
              <!--show each fridge item in table row -->
              {{#each user.ingredients as |ingredient| }}
              {{>fridge-details}}         
              {{/each}}
          </table>
          <div class="text-center"> 
            <button class="btn btn-primary" type="submit">Update</button>
          </div>
            
          </form>

          

          {{else}}
           <div class="row text-center">
              <h5>Your Fridge is Empty! Use the Add Ingredients button to start adding content to your fridge.</h2>
          </div>
          {{!--
          <div class="row text-center">
              <h4>Add Ingredients Below!</h4>
          </div>
               --}}
              
          {{/if}}
      </section>
      <!--Start row for charts -->
      <div class="container">
        <div class="d-flex flex-row flex-wrap align-content-center justify-content-center min-vh-50 p-5" >
            
                <figure class="chart p-30">
                  <!--PRODUCT chart-->
                  <canvas id="productNameChart"></canvas>   
                </figure>

                <figure class="chart p-30">
                  <!--CATEGORY Chart -->
                  <canvas id="categoryChart"></canvas>
                </figure>
            
        </div> <!--end row -->
      </div> <!--end container -->
      <!--End of chart row -->


  </div>  <!--end main column -->
</div> <!--End container -->

<!--dialog for validation -->
<div id="dialog" title="Validation" class="hidden">
    <p id="dialog-error-msg">Please enter your content.</p>
</div>



 <script src="/js/fridge.js"></script> 

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!--script for chart -->
<script>
    //PRODUCT Chart
      const ctx = document.getElementById('productNameChart');
      
      const labels = document.getElementById("labels").value.split(",");
      const quantities = document.getElementById("quantities").value.split(",");
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: '# of Ingredients',
              data: quantities,
              borderWidth: 1,
              /*backgroundColor: "rgb(255, 191, 0)", */
              /*backgroundColor: ["red", "blue", "green", "blue", "red", "blue"], */
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
    
//CATEGORY Chart
const ctxCategory = document.getElementById('categoryChart');
const categories = document.getElementById("categories").value.split(",");
const categoryCount = document.getElementById("category_count").value.split(",");
const categoryColours = document.getElementById("category_colours").value.split(",");
  new Chart(ctxCategory, {
    type: 'pie',
    data: {
      //labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      labels: categories,
      datasets: [{
        label: 'by Category',
        data: categoryCount,
        borderWidth: 1,
        backgroundColor: categoryColours, 
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
</script>



